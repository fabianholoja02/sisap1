<?php

/**
 * This is the model base class for the table "detalle".
 * DO NOT MODIFY THIS FILE! It is automatically generated by AweCrud.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Detalle".
 *
 * Columns in table "detalle" available as properties of the model,
 * followed by relations of table "detalle" available as properties of the model.
 *
 * @property string $ID
 * @property string $ID_FACTURA
 * @property string $ID_RUBRO
 * @property integer $CANTIDAD
 * @property string $V_UNITARIO
 * @property string $V_TOTAL
 * @property string $IVA
 * @property integer $PORC_MORA
 * @property string $VALOR_MORA
 * @property string $FECHA
 * @property string $FECHA_COBRO
 * @property integer $ESTADO
 * @property integer $COD_USUARIO
 * @property string $FECHA_ACTUALIZACION
 *
 * @property Factura $iDFACTURA
 * @property Rubro $iDRUBRO
 */
abstract class BaseDetalle extends AweActiveRecord {

    public static function model($className=__CLASS__) {
        return parent::model($className);
    }

    public function tableName() {
        return 'detalle';
    }

    public static function representingColumn() {
        return 'FECHA_ACTUALIZACION';
    }

    public function rules() {
        return array(
            array('ID_FACTURA, ID_RUBRO, ESTADO', 'required'),
            array('CANTIDAD, PORC_MORA, ESTADO, COD_USUARIO', 'numerical', 'integerOnly'=>true),
            array('ID_FACTURA, ID_RUBRO', 'length', 'max'=>11),
            array('V_UNITARIO, V_TOTAL, IVA, VALOR_MORA', 'length', 'max'=>6),
            array('FECHA, FECHA_COBRO', 'safe'),
            array('CANTIDAD, V_UNITARIO, V_TOTAL, IVA, PORC_MORA, VALOR_MORA, FECHA, FECHA_COBRO, COD_USUARIO', 'default', 'setOnEmpty' => true, 'value' => null),
            array('ID, ID_FACTURA, ID_RUBRO, CANTIDAD, V_UNITARIO, V_TOTAL, IVA, PORC_MORA, VALOR_MORA, FECHA, FECHA_COBRO, ESTADO, COD_USUARIO, FECHA_ACTUALIZACION', 'safe', 'on'=>'search'),
        );
    }

    public function relations() {
        return array(
            'iDFACTURA' => array(self::BELONGS_TO, 'Factura', 'ID_FACTURA'),
            'iDRUBRO' => array(self::BELONGS_TO, 'Rubro', 'ID_RUBRO'),
        );
    }

    /**
     * @return array customized attribute labels (name=>label)
     */
    public function attributeLabels() {
        return array(
                'ID' => Yii::t('app', 'ID'),
                'ID_FACTURA' => Yii::t('app', 'Factura NÂ°'),
                'ID_RUBRO' => Yii::t('app', 'Rubro'),
                'CANTIDAD' => Yii::t('app', 'Cantidad'),
                'V_UNITARIO' => Yii::t('app', 'Valor Unitario'),
                'V_TOTAL' => Yii::t('app', 'Valor Total'),
                'IVA' => Yii::t('app', 'IVA'),
                'PORC_MORA' => Yii::t('app', ' Mora (%)'),
                'VALOR_MORA' => Yii::t('app', 'Valor por mora'),
                'FECHA' => Yii::t('app', 'Fecha'),
                'FECHA_COBRO' => Yii::t('app', 'Fecha del cobro'),
                'ESTADO' => Yii::t('app', 'Estado'),
                'COD_USUARIO' => Yii::t('app', 'Usuario'),
                'FECHA_ACTUALIZACION' => Yii::t('app', 'ActualizaciÃ³n'),
                'iDFACTURA' => null,
                'iDRUBRO' => null,
        );
    }

    public function search() {
        $criteria = new CDbCriteria;

        $criteria->compare('ID', $this->ID, true);
        $criteria->compare('ID_FACTURA', $this->ID_FACTURA);
        $criteria->compare('ID_RUBRO', $this->ID_RUBRO);
        $criteria->compare('CANTIDAD', $this->CANTIDAD);
        $criteria->compare('V_UNITARIO', $this->V_UNITARIO, true);
        $criteria->compare('V_TOTAL', $this->V_TOTAL, true);
        $criteria->compare('IVA', $this->IVA, true);
        $criteria->compare('PORC_MORA', $this->PORC_MORA);
        $criteria->compare('VALOR_MORA', $this->VALOR_MORA, true);
        $criteria->compare('FECHA', $this->FECHA, true);
        $criteria->compare('FECHA_COBRO', $this->FECHA_COBRO, true);
        $criteria->compare('ESTADO', $this->ESTADO);
        $criteria->compare('COD_USUARIO', $this->COD_USUARIO);
        $criteria->compare('FECHA_ACTUALIZACION', $this->FECHA_ACTUALIZACION, true);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
        ));
    }

    public function behaviors() {
        return array_merge(array(
        ), parent::behaviors());
    }
}