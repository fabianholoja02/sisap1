<?php

/**
 * This is the model base class for the table "nuevo_detalle".
 * DO NOT MODIFY THIS FILE! It is automatically generated by AweCrud.
 * If any changes are necessary, you must set or override the required
 * property or method in class "NuevoDetalle".
 *
 * Columns in table "nuevo_detalle" available as properties of the model,
 * followed by relations of table "nuevo_detalle" available as properties of the model.
 *
 * @property string $COD_DETALLE
 * @property string $COD_RECIBO
 * @property string $COD_RUBRO
 * @property integer $CANTIDAD
 * @property string $V_UNITARIO
 * @property string $V_TOTAL
 * @property string $DETALLE
 * @property integer $RECARGO_PORCENTAJE
 * @property string $RECARGO_VALOR
 * @property string $DETALLE_RECARGO
 * @property integer $NUMERO_TERRENO
 * @property integer $ESTADO
 *
 * @property NuevoRecibo $cODRECIBO
 * @property NuevoRubro $cODRUBRO
 */
abstract class BaseNuevoDetalle extends AweActiveRecord {

    public static function model($className=__CLASS__) {
        return parent::model($className);
    }

    public function tableName() {
        return 'nuevo_detalle';
    }

    public static function representingColumn() {
        return 'COD_DETALLE';
    }

    public function rules() {
        return array(
            array('V_UNITARIO, V_TOTAL', 'required'),
            array('CANTIDAD, RECARGO_PORCENTAJE, NUMERO_TERRENO, ESTADO', 'numerical', 'integerOnly'=>true),
            array('COD_RECIBO, COD_RUBRO', 'length', 'max'=>11),
            array('V_UNITARIO, V_TOTAL, RECARGO_VALOR', 'length', 'max'=>8),
            array('DETALLE, DETALLE_RECARGO', 'length', 'max'=>500),
            array('COD_RECIBO, COD_RUBRO, CANTIDAD, DETALLE, RECARGO_PORCENTAJE, RECARGO_VALOR, DETALLE_RECARGO, NUMERO_TERRENO, ESTADO', 'default', 'setOnEmpty' => true, 'value' => null),
            array('COD_DETALLE, COD_RECIBO, COD_RUBRO, CANTIDAD, V_UNITARIO, V_TOTAL, DETALLE, RECARGO_PORCENTAJE, RECARGO_VALOR, DETALLE_RECARGO, NUMERO_TERRENO, ESTADO', 'safe', 'on'=>'search'),
        );
    }

    public function relations() {
        return array(
            'cODRECIBO' => array(self::BELONGS_TO, 'NuevoRecibo', 'COD_RECIBO'),
            'cODRUBRO' => array(self::BELONGS_TO, 'NuevoRubro', 'COD_RUBRO'),
        );
    }

    /**
     * @return array customized attribute labels (name=>label)
     */
    public function attributeLabels() {
        return array(
                'COD_DETALLE' => Yii::t('app', 'Cod Detalle'),
                'COD_RECIBO' => Yii::t('app', 'Cod Recibo'),
                'COD_RUBRO' => Yii::t('app', 'Cod Rubro'),
                'CANTIDAD' => Yii::t('app', 'Cantidad'),
                'V_UNITARIO' => Yii::t('app', 'V Unitario'),
                'V_TOTAL' => Yii::t('app', 'V Total'),
                'DETALLE' => Yii::t('app', 'Detalle'),
                'RECARGO_PORCENTAJE' => Yii::t('app', 'Recargo Porcentaje'),
                'RECARGO_VALOR' => Yii::t('app', 'Recargo Valor'),
                'DETALLE_RECARGO' => Yii::t('app', 'Detalle Recargo'),
                'NUMERO_TERRENO' => Yii::t('app', 'Numero Terreno'),
                'ESTADO' => Yii::t('app', 'Estado'),
                'cODRECIBO' => null,
                'cODRUBRO' => null,
        );
    }

    public function search() {
        $criteria = new CDbCriteria;

        $criteria->compare('COD_DETALLE', $this->COD_DETALLE, true);
        $criteria->compare('COD_RECIBO', $this->COD_RECIBO);
        $criteria->compare('COD_RUBRO', $this->COD_RUBRO);
        $criteria->compare('CANTIDAD', $this->CANTIDAD);
        $criteria->compare('V_UNITARIO', $this->V_UNITARIO, true);
        $criteria->compare('V_TOTAL', $this->V_TOTAL, true);
        $criteria->compare('DETALLE', $this->DETALLE, true);
        $criteria->compare('RECARGO_PORCENTAJE', $this->RECARGO_PORCENTAJE);
        $criteria->compare('RECARGO_VALOR', $this->RECARGO_VALOR, true);
        $criteria->compare('DETALLE_RECARGO', $this->DETALLE_RECARGO, true);
        $criteria->compare('NUMERO_TERRENO', $this->NUMERO_TERRENO);
        $criteria->compare('ESTADO', $this->ESTADO);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
        ));
    }
    public function searchAplicados($id) {
        $criteria = new CDbCriteria;

        $criteria->compare('COD_DETALLE', $this->COD_DETALLE, true);
        $criteria->compare('COD_RECIBO', $this->COD_RECIBO);
        $criteria->compare('COD_RUBRO', $id);
        $criteria->compare('CANTIDAD', $this->CANTIDAD);
        $criteria->compare('V_UNITARIO', $this->V_UNITARIO, true);
        $criteria->compare('V_TOTAL', $this->V_TOTAL, true);
        $criteria->compare('DETALLE', $this->DETALLE, true);
        $criteria->compare('RECARGO_PORCENTAJE', $this->RECARGO_PORCENTAJE);
        $criteria->compare('RECARGO_VALOR', $this->RECARGO_VALOR, true);
        $criteria->compare('DETALLE_RECARGO', $this->DETALLE_RECARGO, true);
        $criteria->compare('NUMERO_TERRENO', $this->NUMERO_TERRENO);
        $criteria->compare('ESTADO', $this->ESTADO);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
        ));
    }

    public function behaviors() {
        return array_merge(array(
        ), parent::behaviors());
    }
}