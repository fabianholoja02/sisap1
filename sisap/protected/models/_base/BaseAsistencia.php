<?php

/**
 * This is the model base class for the table "asistencia".
 * DO NOT MODIFY THIS FILE! It is automatically generated by AweCrud.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Asistencia".
 *
 * Columns in table "asistencia" available as properties of the model,
 * followed by relations of table "asistencia" available as properties of the model.
 *
 * @property string $CODIGO_ASISTENCIA
 * @property string $CODIGO_SOCIO
 * @property string $CODIGO_REUNION
 * @property string $FECHA
 * @property string $HORA_INGRESO
 * @property string $HORA_SALIDA
 * @property integer $REGISTRA_INGRESO_PUNTUAL
 * @property integer $REGISTRA_ATRASO
 * @property integer $REGISTRA_FUGA
 * @property integer $REGISTRA_SALIDA_PUNTUAL
 * @property string $OBSERVACIONES
 * @property integer $COD_USUARIO
 * @property string $FECHA_ACTUALIZACION
 *
 * @property Reunion $cODIGOREUNION
 * @property Socio $cODIGOSOCIO
 */
abstract class BaseAsistencia extends AweActiveRecord {

    public static function model($className=__CLASS__) {
        return parent::model($className);
    }

    public function tableName() {
        return 'asistencia';
    }

    public static function representingColumn() {
        return 'FECHA';
    }

    public function rules() {
        return array(
            array('CODIGO_SOCIO, CODIGO_REUNION, FECHA', 'required'),
            array('REGISTRA_INGRESO_PUNTUAL, REGISTRA_ATRASO, REGISTRA_FUGA, REGISTRA_SALIDA_PUNTUAL, COD_USUARIO', 'numerical', 'integerOnly'=>true),
            array('CODIGO_SOCIO, CODIGO_REUNION', 'length', 'max'=>11),
            array('OBSERVACIONES', 'length', 'max'=>500),
            array('HORA_INGRESO, HORA_SALIDA, FECHA_ACTUALIZACION', 'safe'),
            array('HORA_INGRESO, HORA_SALIDA, REGISTRA_INGRESO_PUNTUAL, REGISTRA_ATRASO, REGISTRA_FUGA, REGISTRA_SALIDA_PUNTUAL, OBSERVACIONES, COD_USUARIO, FECHA_ACTUALIZACION', 'default', 'setOnEmpty' => true, 'value' => null),
            array('CODIGO_ASISTENCIA, CODIGO_SOCIO, CODIGO_REUNION, FECHA, HORA_INGRESO, HORA_SALIDA, REGISTRA_INGRESO_PUNTUAL, REGISTRA_ATRASO, REGISTRA_FUGA, REGISTRA_SALIDA_PUNTUAL, OBSERVACIONES, COD_USUARIO, FECHA_ACTUALIZACION', 'safe', 'on'=>'search'),
        );
    }

    public function relations() {
        return array(
            'cODIGOREUNION' => array(self::BELONGS_TO, 'Reunion', 'CODIGO_REUNION'),
            'cODIGOSOCIO' => array(self::BELONGS_TO, 'Socio', 'CODIGO_SOCIO'),
        );
    }

    /**
     * @return array customized attribute labels (name=>label)
     */
    public function attributeLabels() {
        return array(
                'CODIGO_ASISTENCIA' => Yii::t('app', 'Código de asistencia'),
                'CODIGO_SOCIO' => Yii::t('app', '<b>Código de barra </b>'),
                'CODIGO_REUNION' => Yii::t('app', 'Código de reunión'),
                'FECHA' => Yii::t('app', 'Fecha'),
                'HORA_INGRESO' => Yii::t('app', 'Hora de íngreso'),
                'HORA_SALIDA' => Yii::t('app', 'Hora de salida'),
                'REGISTRA_INGRESO_PUNTUAL' => Yii::t('app', 'Registra ingreso puntual'),
                'REGISTRA_ATRASO' => Yii::t('app', 'Registra atraso'),
                'REGISTRA_FUGA' => Yii::t('app', 'Registra fuga'),
                'REGISTRA_SALIDA_PUNTUAL' => Yii::t('app', 'Registra salida puntual'),
                'OBSERVACIONES' => Yii::t('app', 'Observaciones'),
                'COD_USUARIO' => Yii::t('app', 'Modificado por:'),
                'FECHA_ACTUALIZACION' => Yii::t('app', 'Fecha de actualización:'),
                'cODIGOREUNION' => null,
                'cODIGOSOCIO' => null,
        );
    }

    public function search() {
        $criteria = new CDbCriteria;

        $criteria->compare('CODIGO_ASISTENCIA', $this->CODIGO_ASISTENCIA, true);
        $criteria->compare('CODIGO_SOCIO', $this->CODIGO_SOCIO);
        $criteria->compare('CODIGO_REUNION', $this->CODIGO_REUNION);
        $criteria->compare('FECHA', $this->FECHA, true);
        $criteria->compare('HORA_INGRESO', $this->HORA_INGRESO, true);
        $criteria->compare('HORA_SALIDA', $this->HORA_SALIDA, true);
        $criteria->compare('REGISTRA_INGRESO_PUNTUAL', $this->REGISTRA_INGRESO_PUNTUAL);
        $criteria->compare('REGISTRA_ATRASO', $this->REGISTRA_ATRASO);
        $criteria->compare('REGISTRA_FUGA', $this->REGISTRA_FUGA);
        $criteria->compare('REGISTRA_SALIDA_PUNTUAL', $this->REGISTRA_SALIDA_PUNTUAL);
        $criteria->compare('OBSERVACIONES', $this->OBSERVACIONES, true);
        $criteria->compare('COD_USUARIO', $this->COD_USUARIO);
        $criteria->compare('FECHA_ACTUALIZACION', $this->FECHA_ACTUALIZACION, true);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
        ));
    }

    public function behaviors() {
        return array_merge(array(
        ), parent::behaviors());
    }
}