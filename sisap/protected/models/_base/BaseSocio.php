<?php

/**
 * This is the model base class for the table "socio".
 * DO NOT MODIFY THIS FILE! It is automatically generated by AweCrud.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Socio".
 *
 * Columns in table "socio" available as properties of the model,
 * followed by relations of table "socio" available as properties of the model.
 *
 * @property string $CODIGO
 * @property string $CI
 * @property string $APELLIDO
 * @property string $GENERO
 * @property string $COD_BARRA
 * @property string $DIRECCION
 * @property string $TELEFONO
 * @property string $CELULAR
 * @property string $EMAIL
 * @property string $ESTADO_CIVIL
 * @property string $NOMBRE_CONYUGE
 * @property string $FOTO
 * @property string $ESTADO
 * @property string $TIPO
 * @property string $FECHA_NACIMIENTO
 * @property string $OBS
 * @property integer $COD_USUARIO
 * @property string $FECHA_ACTUALIZACION
 * @property string $FECHA_INGRESO
 * @property string $FECHA_SALIDA
 * @property integer $USU_AGUA_RIEGO
 * @property integer $USU_AGUA_POTABLE
 * @property string $COD_BARRA_RIEGO_OLD
 * @property string $COD_BARRA_POTABLE
 *
 * @property SocioMedidor[] $socioMedidors
 */
abstract class BaseSocio extends AweActiveRecord {

    public static function model($className = __CLASS__) {
        return parent::model($className);
    }

    public function tableName() {
        return 'socio';
    }

    public static function representingColumn() {
        return 'ESTADO';
    }

    public function rules() {
        return array(
            array('COD_USUARIO, USU_AGUA_RIEGO, USU_AGUA_POTABLE', 'numerical', 'integerOnly' => true),
            array('APELLIDO, EMAIL, NOMBRE_CONYUGE, ESTADO, OBS', 'length', 'max' => 80),
            array('GENERO', 'length', 'max' => 1),
            array('COD_BARRA, CELULAR, ESTADO_CIVIL, COD_BARRA_RIEGO_OLD, COD_BARRA_POTABLE', 'length', 'max' => 15),
            array('DIRECCION, FOTO', 'length', 'max' => 100),
            array('TELEFONO', 'length', 'max' => 20),
            array('TIPO', 'length', 'max' => 10),
            array('FECHA_NACIMIENTO, FECHA_INGRESO, FECHA_SALIDA', 'safe'),
            array('CI, APELLIDO, GENERO, COD_BARRA, DIRECCION, TELEFONO, CELULAR, EMAIL, ESTADO_CIVIL, NOMBRE_CONYUGE, FOTO, ESTADO, TIPO, FECHA_NACIMIENTO, OBS, COD_USUARIO, FECHA_INGRESO, FECHA_SALIDA, USU_AGUA_RIEGO, USU_AGUA_POTABLE, COD_BARRA_RIEGO_OLD, COD_BARRA_POTABLE', 'default', 'setOnEmpty' => true, 'value' => null),
            array('CODIGO, CI, APELLIDO, GENERO, COD_BARRA, DIRECCION, TELEFONO, CELULAR, EMAIL, ESTADO_CIVIL, NOMBRE_CONYUGE, FOTO, ESTADO, TIPO, FECHA_NACIMIENTO, OBS, COD_USUARIO, FECHA_ACTUALIZACION, FECHA_INGRESO, FECHA_SALIDA, USU_AGUA_RIEGO, USU_AGUA_POTABLE, COD_BARRA_RIEGO_OLD, COD_BARRA_POTABLE', 'safe', 'on' => 'search'),
            array('CI', 'numerical', 'integerOnly' => true),
            array('CI', 'length', 'max' => 13),
            array('EMAIL', 'email'),
                //  array('CI','unique','message'=>'La CI/RUC ya esta en uso.'),
        );
    }

    public function relations() {
        return array(
            'medidor'=>array(self::MANY_MANY, 'Medidor','socio_medidor(CODIGO_SOCIO, ID_MEDIDOR)'),
            //'categories'=>array(self::MANY_MANY, 'Category', 'PostCategory(postID, categoryID)'),
            'usuario' => array(self::BELONGS_TO, 'Usuario', 'COD_USUARIO'),
        );
    }

    /**
     * @return array customized attribute labels (name=>label)
     */
    public function attributeLabels() {
        return array(
            'CODIGO' => Yii::t('app', 'Código'),
            'CI' => Yii::t('app', 'CI/RUC'),
            'APELLIDO' => Yii::t('app', 'Nombres Completos'),
            'GENERO' => Yii::t('app', 'Género'),
            'COD_BARRA' => Yii::t('app', 'Codigo de barra'),
            'DIRECCION' => Yii::t('app', 'Dirección'),
            'TELEFONO' => Yii::t('app', 'Teléfono'),
            'CELULAR' => Yii::t('app', 'Celular'),
            'EMAIL' => Yii::t('app', 'Email'),
            'ESTADO_CIVIL' => Yii::t('app', 'Estado Civil'),
            'NOMBRE_CONYUGE' => Yii::t('app', 'Nombre Conyuge'),
            'FOTO' => Yii::t('app', 'Foto'),
            'ESTADO' => Yii::t('app', 'Estado'),
            'TIPO' => Yii::t('app', 'Tipo'),
            'FECHA_NACIMIENTO' => Yii::t('app', 'Fecha de nacimiento'),
            'OBS' => Yii::t('app', 'Observaciones'),
            'COD_USUARIO' => Yii::t('app', 'Modificado por:'),
            'FECHA_ACTUALIZACION' => Yii::t('app', 'Modificado el:'),
            'socioMedidors' => null,
        );
    }

    public function search() {
        $criteria = new CDbCriteria;

        $criteria->compare('CODIGO', $this->CODIGO, true);
        $criteria->compare('CI', $this->CI, true);
        $criteria->compare('APELLIDO', $this->APELLIDO, true);
        $criteria->compare('GENERO', $this->GENERO, true);
        $criteria->compare('COD_BARRA', $this->COD_BARRA, true);
        $criteria->compare('DIRECCION', $this->DIRECCION, true);
        $criteria->compare('TELEFONO', $this->TELEFONO, true);
        $criteria->compare('CELULAR', $this->CELULAR, true);
        $criteria->compare('EMAIL', $this->EMAIL, true);
        $criteria->compare('ESTADO_CIVIL', $this->ESTADO_CIVIL, true);
        $criteria->compare('NOMBRE_CONYUGE', $this->NOMBRE_CONYUGE, true);
        $criteria->compare('FOTO', $this->FOTO, true);
        $criteria->compare('ESTADO', $this->ESTADO, true);
        $criteria->compare('TIPO', $this->TIPO, true);
        $criteria->compare('FECHA_NACIMIENTO', $this->FECHA_NACIMIENTO, true);
        $criteria->compare('OBS', $this->OBS, true);
        $criteria->compare('COD_USUARIO', $this->COD_USUARIO);
        $criteria->compare('FECHA_ACTUALIZACION', $this->FECHA_ACTUALIZACION, true);
        $criteria->compare('FECHA_INGRESO', $this->FECHA_INGRESO, true);
        $criteria->compare('FECHA_SALIDA', $this->FECHA_SALIDA, true);
        $criteria->compare('USU_AGUA_RIEGO', $this->USU_AGUA_RIEGO);
        $criteria->compare('USU_AGUA_POTABLE', $this->USU_AGUA_POTABLE);
        $criteria->compare('COD_BARRA_RIEGO_OLD', $this->COD_BARRA_RIEGO_OLD, true);
        $criteria->compare('COD_BARRA_POTABLE', $this->COD_BARRA_POTABLE, true);



        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
        ));
    }

    public function behaviors() {
        return array_merge(array(
                ), parent::behaviors());
    }

}
