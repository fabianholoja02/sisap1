<?php

/**
 * This is the model base class for the table "nuevo_recibo".
 * DO NOT MODIFY THIS FILE! It is automatically generated by AweCrud.
 * If any changes are necessary, you must set or override the required
 * property or method in class "NuevoRecibo".
 *
 * Columns in table "nuevo_recibo" available as properties of the model,
 * followed by relations of table "nuevo_recibo" available as properties of the model.
 *
 * @property string $COD_RECIBO
 * @property integer $COD_SOCIO
 * @property integer $TIPO
 * @property integer $APLICA
 * @property integer $COD_JUNTA
 * @property string $FECHA
 * @property integer $ESTADO
 * @property integer $COD_USUARIO
 * @property string $FECHA_ACTUALIZACION
 * @property integer $TURNO
 * @property string $FECHA_TURNO
 * @property string $EFECTIVO
 * @property string $CAMBIO
 * @property string $FECHA_COBRO
 * @property integer $TIEMPO_ESPERA
 * @property integer $PENDIENTE
 * 

 * 
 * @property NuevaImprecion[] $nuevaImprecions
 * @property NuevoDetalle[] $nuevoDetalles
 * @property Socio $cODSOCIO
 */
abstract class BaseNuevoRecibo extends AweActiveRecord {

    public static function model($className=__CLASS__) {
        return parent::model($className);
    }

    public function tableName() {
        return 'nuevo_recibo';
    }

    public static function representingColumn() {
        return 'COD_RECIBO';
    }

    public function rules() {
        return array(
            array('COD_RECIBO, COD_SOCIO', 'required'),
            array('COD_SOCIO, TIPO, APLICA, COD_JUNTA, ESTADO, COD_USUARIO, TURNO, TIEMPO_ESPERA', 'numerical', 'integerOnly'=>true),
            array('COD_RECIBO', 'length', 'max'=>11),
            array('PENDIENTE', 'length', 'max'=>1),
            array('FECHA', 'safe'),
            array('TIPO, APLICA, COD_JUNTA, FECHA, ESTADO, COD_USUARIO, TURNO, FECHA_TURNO, PENDIENTE, EFECTIVO, CAMBIO, FECHA_COBRO, TIEMPO_ESPERA', 'default', 'setOnEmpty' => true, 'value' => null),
            array('COD_RECIBO, COD_SOCIO, TIPO, APLICA, COD_JUNTA, FECHA, ESTADO, COD_USUARIO, FECHA_ACTUALIZACION, TURNO, FECHA_TURNO, PENDIENTE, EFECTIVO, CAMBIO, FECHA_COBRO, TIEMPO_ESPERA', 'safe', 'on'=>'search'),
        );
    }

    public function relations() {
        return array(
            'nuevaImprecions' => array(self::HAS_MANY, 'NuevaImprecion', 'COD_RECIBO'),
            'nuevoDetalles' => array(self::HAS_MANY, 'NuevoDetalle', 'COD_RECIBO'),
            'cODSOCIO' => array(self::BELONGS_TO, 'Socio', 'COD_SOCIO'),
            'cODJUNTA' => array(self::BELONGS_TO, 'Junta', 'COD_JUNTA'),
        );
    }

    /**
     * @return array customized attribute labels (name=>label)
     */
    public function attributeLabels() {
        return array(
                'COD_RECIBO' => Yii::t('app', 'Recibo N°'),
                'COD_SOCIO' => Yii::t('app', 'Lector de códigos de barra'),
                'TIPO' => Yii::t('app', 'Tipo'),
                'APLICA' => Yii::t('app', 'Aplica'),
                'COD_JUNTA' => Yii::t('app', 'Junta'),
                'FECHA' => Yii::t('app', 'Fecha de cración'),
                'ESTADO' => Yii::t('app', 'Estado'),
                'COD_USUARIO' => Yii::t('app', 'Modificado por:'),
                'FECHA_ACTUALIZACION' => Yii::t('app', 'Ultima Actualización'),
            
                'TURNO' => Yii::t('app', 'Turno'),
                'FECHA_TURNO' => Yii::t('app', 'Fecha que reservó el turno'),
                'PENDIENTE' => Yii::t('app', 'Pendiente'),
                'EFECTIVO' => Yii::t('app', 'Efectivo que Recibe'),
                'CAMBIO' => Yii::t('app', 'Cambio'),
                'FECHA_COBRO' => Yii::t('app', 'Fecha de cobró'),
                'TIEMPO_ESPERA' => Yii::t('app', 'Tiempo de espera'),
                
            
               
            
                'nuevaImprecions' => null,
                'nuevoDetalles' => null,
                'cODSOCIO' => null,
        );
    }

    public function search() {
        $criteria = new CDbCriteria;

        $criteria->compare('COD_RECIBO', $this->COD_RECIBO, true);
        $criteria->compare('COD_SOCIO', $this->COD_SOCIO);
        $criteria->compare('TIPO', $this->TIPO);
        $criteria->compare('APLICA', $this->APLICA);
        $criteria->compare('COD_JUNTA', $this->COD_JUNTA);
        $criteria->compare('FECHA', $this->FECHA, true);
        $criteria->compare('ESTADO', $this->ESTADO);
        $criteria->compare('COD_USUARIO', $this->COD_USUARIO);
        $criteria->compare('FECHA_ACTUALIZACION', $this->FECHA_ACTUALIZACION, true);
        $criteria->compare('TURNO', $this->TURNO);
        

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
        ));
    }

    public function behaviors() {
        return array_merge(array(
        ), parent::behaviors());
    }
}