<?php

/**
 * This is the model base class for the table "factura".
 * DO NOT MODIFY THIS FILE! It is automatically generated by AweCrud.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Factura".
 *
 * Columns in table "factura" available as properties of the model,
 * followed by relations of table "factura" available as properties of the model.
 *
 * @property string $ID
 * @property string $ID_MEDIDOR_SOCIO
 * @property integer $CONSUMO_ANTERIOR
 * @property integer $CONSUMO_ACTUAL
 * @property integer $CONSUMO_CALCULADO
 * @property integer $MES_COBRO
 * @property integer $ANIO_COBRO
 * @property integer $ESTADO
 * @property integer $TIPO
 *
 * @property Detalle[] $detalles
 * @property SocioMedidor $iDMEDIDORSOCIO
 */
abstract class BaseFactura extends AweActiveRecord {

    public static function model($className=__CLASS__) {
        return parent::model($className);
    }

    public function tableName() {
        return 'factura';
    }

    public static function representingColumn() {
        return 'ID';
    }

    public function rules() {
        return array(
            array('ID_MEDIDOR_SOCIO', 'required'),
            array('CONSUMO_ANTERIOR, CONSUMO_ACTUAL, CONSUMO_CALCULADO, MES_COBRO, ANIO_COBRO, ESTADO, TIPO', 'numerical', 'integerOnly'=>true),
            array('ID_MEDIDOR_SOCIO', 'length', 'max'=>11),
            array('CONSUMO_ANTERIOR, CONSUMO_ACTUAL, CONSUMO_CALCULADO, MES_COBRO, ANIO_COBRO, ESTADO, TIPO', 'default', 'setOnEmpty' => true, 'value' => null),
            array('ID, ID_MEDIDOR_SOCIO, CONSUMO_ANTERIOR, CONSUMO_ACTUAL, CONSUMO_CALCULADO, MES_COBRO, ANIO_COBRO, ESTADO, TIPO', 'safe', 'on'=>'search'),
        );
    }

    public function relations() {
        return array(
            'detalles' => array(self::HAS_MANY, 'Detalle', 'ID_FACTURA'),
            'iDMEDIDORSOCIO' => array(self::BELONGS_TO, 'SocioMedidor', 'ID_MEDIDOR_SOCIO'),
        );
    }

    /**
     * @return array customized attribute labels (name=>label)
     */
    public function attributeLabels() {
        return array(
                'ID' => Yii::t('app', 'ID'),
                'ID_MEDIDOR_SOCIO' => Yii::t('app', 'Id Medidor Socio'),
                'CONSUMO_ANTERIOR' => Yii::t('app', 'Consumo Anterior'),
                'CONSUMO_ACTUAL' => Yii::t('app', 'Consumo Actual'),
                'CONSUMO_CALCULADO' => Yii::t('app', 'Consumo Calculado'),
                'MES_COBRO' => Yii::t('app', 'Mes Consumo'),
                'ANIO_COBRO' => Yii::t('app', 'Anio Consumo'),
                'ESTADO' => Yii::t('app', 'Estado'),
                'TIPO' => Yii::t('app', 'Tipo'),
                'detalles' => null,
                'iDMEDIDORSOCIO' => null,
        );
    }

    public function search() {
        $criteria = new CDbCriteria;

        $criteria->compare('ID', $this->ID, true);
        $criteria->compare('ID_MEDIDOR_SOCIO', $this->ID_MEDIDOR_SOCIO);
        $criteria->compare('CONSUMO_ANTERIOR', $this->CONSUMO_ANTERIOR);
        $criteria->compare('CONSUMO_ACTUAL', $this->CONSUMO_ACTUAL);
        $criteria->compare('CONSUMO_CALCULADO', $this->CONSUMO_CALCULADO);
        $criteria->compare('MES_COBRO', $this->MES_COBRO);
        $criteria->compare('ANIO_COBRO', $this->ANIO_COBRO);
        $criteria->compare('ESTADO', $this->ESTADO);
        $criteria->compare('TIPO', $this->TIPO);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
        ));
    }

    public function behaviors() {
        return array_merge(array(
        ), parent::behaviors());
    }
}